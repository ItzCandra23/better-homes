"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const actor_1 = require("bdsx/bds/actor");
const blockpos_1 = require("bdsx/bds/blockpos");
const command_1 = require("bdsx/bds/command");
const command_2 = require("bdsx/command");
const nativetype_1 = require("bdsx/nativetype");
const api_1 = require("../api");
const form_1 = require("../form");
command_2.command.register("homeui", "Open home-ui menu.")
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    form_1.HomeForm.menu(pl);
}, {});
command_2.command.register("addhome", "Create a new home position.")
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    form_1.HomeForm.add(pl);
}, {})
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    api_1.HomeAPI.addHome(pl, p.name, blockpos_1.BlockPos.create(pl.getPosition()), pl.getDimensionId(), pl);
}, {
    name: nativetype_1.CxxString
})
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    api_1.HomeAPI.addHome(pl, p.name, blockpos_1.BlockPos.create(p.pos.x, p.pos.y, p.pos.z), pl.getDimensionId(), pl);
}, {
    name: nativetype_1.CxxString,
    pos: command_1.CommandPosition
})
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    if (p.dimension === "Overworld") {
        api_1.HomeAPI.addHome(pl, p.name, blockpos_1.BlockPos.create(p.pos.x, p.pos.y, p.pos.z), actor_1.DimensionId.Overworld, pl);
    }
    if (p.dimension === "Nether") {
        api_1.HomeAPI.addHome(pl, p.name, blockpos_1.BlockPos.create(p.pos.x, p.pos.y, p.pos.z), actor_1.DimensionId.Nether, pl);
    }
    if (p.dimension === "TheEnd") {
        api_1.HomeAPI.addHome(pl, p.name, blockpos_1.BlockPos.create(p.pos.x, p.pos.y, p.pos.z), actor_1.DimensionId.TheEnd, pl);
    }
}, {
    name: nativetype_1.CxxString,
    pos: command_1.CommandPosition,
    dimension: command_2.command.enum("CommandDimensionId", "Overworld", "Nether", "TheEnd")
});
command_2.command.register("removehome", "Delete/Remove your home position.")
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    form_1.HomeForm.remove(pl);
}, {})
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    api_1.HomeAPI.removeHome(pl, p.name, pl);
}, {
    name: nativetype_1.CxxString
});
command_2.command.register("home", "Teleport/check your home.")
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    form_1.HomeForm.teleport(pl);
}, {})
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    api_1.HomeAPI.teleport(pl, p.name, pl);
}, {
    name: nativetype_1.CxxString
})
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    if (p.checkPos === true) {
        api_1.HomeAPI.checkHome(pl, p.name);
    }
    if (p.checkPos === false) {
        api_1.HomeAPI.teleport(pl, p.name, pl);
    }
}, {
    name: nativetype_1.CxxString,
    checkPos: nativetype_1.bool_t
});
command_2.command.register("listhome", "Check your homes.")
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    api_1.HomeAPI.listHome(pl, pl);
}, {});
command_2.command.register("setmaxhome", "Change limits player homes.", command_1.CommandPermissionLevel.Operator)
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    api_1.HomeAPI.setMaxHomes(p.maximum, pl);
}, {
    normalplayer: command_2.command.enum("set_normal", "normal"),
    maximum: nativetype_1.int32_t
})
    .overload((p, o) => {
    const entity = o.getEntity();
    if (entity === null)
        return;
    const pl = entity.getNetworkIdentifier().getActor();
    if (pl === null)
        return;
    api_1.HomeAPI.setMaxHomes(p.maximum, pl);
}, {
    adminplayer: command_2.command.enum("set_admin", "admin"),
    maximum: nativetype_1.int32_t
});
//# sourceMappingURL=data:application/json;base64,